<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="JsonSchema.Net" Version="5.2.6" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.23"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**"/>
        <Content Include="..\..\..\.dockerignore">
          <Link>.dockerignore</Link>
        </Content>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\schema.Abstractions\schema.Abstractions.csproj" />
      <ProjectReference Include="..\schema.Client\schema.Client.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="bun --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="bun install"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="bun install"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="bun run build"/>

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>


  <ItemGroup>
    <None Update="RemixApp\.prettierignore">
      <DependentUpon>.prettierrc</DependentUpon>
    </None>
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="bun\my-remix-app\build\metafile.css.json" />
    <_ContentIncludedByDefault Remove="bun\my-remix-app\build\metafile.js.json" />
    <_ContentIncludedByDefault Remove="bun\my-remix-app\build\metafile.server.json" />
    <_ContentIncludedByDefault Remove="rbun\build\metafile.css.json" />
    <_ContentIncludedByDefault Remove="rbun\build\metafile.js.json" />
    <_ContentIncludedByDefault Remove="rbun\build\metafile.server.json" />
    <_ContentIncludedByDefault Remove="remix\build\metafile.css.json" />
    <_ContentIncludedByDefault Remove="remix\build\metafile.js.json" />
    <_ContentIncludedByDefault Remove="remix\build\metafile.server.json" />
    <_ContentIncludedByDefault Remove="remix\package.json" />
    <_ContentIncludedByDefault Remove="remix\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\app\components\" />
    <Folder Include="ClientApp\cers\" />
  </ItemGroup>

</Project>
